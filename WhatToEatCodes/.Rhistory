library(C50)
data(churn)
str(churnTrain)
churnTrain = churnTrain[,! names(churnTrain) %in% c("state","area_code", "account_length") ]
set.seed(2)
ind = sample(2, nrow(churnTrain), replace = TRUE, prob=c(0.7,0.3))
trainset = churnTrain[ind == 1,]
testset = churnTrain[ind == 2,]
svm.model= train(churn ~ .,data = trainset,method = "svmRadial")
svm.pred = predict(svm.model, testset[,! names(testset) %in% c("churn")])
table(svm.pred, testset[,c("churn")])
confusionMatrix(svm.pred, testset[,c("churn")])
install.packages("ROCR")
library(ROCR)
svmfit=svm(churn~ ., data=trainset, prob=TRUE)
svmfit
pred=predict(svmfit,testset[, !names(testset) %in% c("churn")], probability=TRUE)
pred.prob = attr(pred, "probabilities")
pred.to.roc = pred.prob[, 2]
pred.rocr = prediction(pred.to.roc, testset$churn)
perf.rocr = performance(pred.rocr, measure = "auc", x.measure ="cutoff")
svmfit=svm(churn~ ., data=trainset, prob=TRUE)
pred=predict(svmfit,testset[, !names(testset) %in% c("churn")], probability=TRUE)
pred
pred.prob = attr(pred, "probabilities")
pred.prob
pred.to.roc = pred.prob[, 2]
pred.to.roc
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
library(rpart)
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
perf.tpr.rocr = performance(pred.rocr, "tpr","fpr")
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
a = read.table(text=' a b
1 c
1 d
2 c
2 a
2 b
3 a
', head=T)
b = tapply(a[,2], a[,1], paste)
b
a$tf = sapply(a[,1], function(e){b[e]})
a$tf
library(arules)
data(Groceries)
write(Groceries,"Groceries.txt")
itemFrequencyPlot(Groceries, support = 0.1, cex.names=0.8,topN=5)
rules = apriori(Groceries, parameter = list(supp = 0.01, conf =0.5, target= "rules"))
summary(rules)
inspect(head(rules))
rules=sort(rules, by="confidence", decreasing=TRUE)
write(rules,"Groceries.txt")
head(interestMeasure(rules, c("support", "chiSquare", "confidence","conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),Groceries))
head(interestMeasure(rules, c("support","confidence", "chiSquare", "conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),Groceries))
y <- data.frame(a = 1, b = "a")
dput(y)
dput(y, file = "y.R")
new.y <- dget("y.R")
new.y
x <- "foo"
y <- data.frame(a = 1, b = "a")
y
x
dump(c("x", "y"), file = "data.R")
rm(x, y)
source("data.R")
y
x
ingre_rule=
apriori(data=trans,
parameter=list(supp=0.001,conf= 0.1, minlen=2),
appearance = list(default="both"))
setwd("~/GitHub/YB103G4/WhatToEatCodes")
ALL = read.csv("ALL_forApriori.txt",header =F, strip.white=TRUE, sep=',')
bll = tapply(ALL[,2], ALL[,1], paste)
#filter null lists
Bll = Filter(Negate(is.null), bll)
#filter dup lists
ingreList = lapply(Bll, unique)
trans = as(ingreList, "transactions")
ALL = read.csv("ALL_forApriori.txt",header =F, strip.white=TRUE, sep=',')
#生成lists
bll = tapply(ALL[,2], ALL[,1], paste)
library(arules)
library(arulesViz)
library(dplyr)
ALL = read.csv("ALL_forApriori.txt",header =F, strip.white=TRUE, sep=',')
#生成lists
bll = tapply(ALL[,2], ALL[,1], paste)
#filter null lists
Bll = Filter(Negate(is.null), bll)
#filter dup lists
ingreList = lapply(Bll, unique)
trans = as(ingreList, "transactions")
ingre_rule=
apriori(data=trans,
parameter=list(supp=0.001,conf= 0.1, minlen=2),
appearance = list(default="both"))
summary(ingre_rule)
head(interestMeasure(ingre_rule, c("support","confidence", "chiSquare", "conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),Groceries))
head(interestMeasure(ingre_rule, c("support","confidence", "chiSquare", "conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),trans))
inspect(ingre_rule)
head(inspect(ingre_rule))
rules123=sort(ingre_rule, by="lift", decreasing=TRUE)
rules123
inspect(rules123)
head(interestMeasure(ingre_rule, c("support","confidence", "chiSquare", "conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),trans))
interestMeasure
?interestMeasure
data("Income")
rules <- apriori(Income)
rules
quality(rules) <- cbind(quality(rules),
hyperConfidence = interestMeasure(rules, method = "hyperConfidence",
transactions = Income))
quality(rules)
inspect(head(sort(rules, by = "hyperConfidence")))
m <- interestMeasure(rules, c("confidence", "oddsRatio", "leverage"),
transactions = Income)
inspect(head(rules))
rules = apriori(trans, parameter = list(supp = 0.001, conf =0.5, target= "rules"))
t(interestMeasure(head(rules, 5), transactions = Income))
newTrans <- sample(Income, 100)
m2 <- interestMeasure(rules, "support", transactions = newTrans, reuse = FALSE)
head(m2)
head(interestMeasure(ingre_rule, c("support","confidence", "lift","chiSquare","allConfidence", "cosine", "oddsRatio"),trans))
head(interestMeasure(trans, c("support","confidence", "lift","chiSquare","allConfidence", "cosine", "oddsRatio"),trans))
head(interestMeasure(trans, c("support","confidence", "lift","chiSquare","allConfidence", "cosine", "oddsRatio")))
head(interestMeasure(ingreList, c("support","confidence", "lift","chiSquare","cosine", "oddsRatio"),trans))
head(interestMeasure(ingre_rule, c("support","confidence", "lift","chiSquare","cosine", "oddsRatio"),trans))
