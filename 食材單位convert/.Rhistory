select(Qoo, V1, V5) %>%
filter(V5 != '') %>%
distinct(V1,V5)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
aa = tapply(Qxx[,4], Qxx[,1], function(x) paste(x,collapse=","))
write.table(inner_join(Qxx, Qyy), "joined.txt",sep=",",quote = F, row.names = F,
col.names = F)
a = read.table("joined.txt",sep=",")
b = tapply(a[,5], a[,1:4], paste)
a$tf = sapply(a[,1], function(e){b[e]})
a$tf
Qoo = read.table("ingre_dups.txt",sep=",")
str(Qoo)
Qoo$V2 = as.integer(as.character(Qoo$V2))
Qoo$V3 = as.integer(as.character(Qoo$V3))
library(dplyr)
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(WeightMean = mean(V2,na.rm = T),KalMean = mean(V3, na.rm = T),PerGramMean = mean(V4, na.rm = T))
write.table(Qxx, "ingre_dups1.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qyy =
select(Qoo, V1, V5) %>%
filter(V5 != '') %>%
distinct(V1,V5)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qoo = read.table("ingre_dups.txt",sep=",")
str(Qoo)
Qoo$V1 = as.integer(as.character(Qoo$V1))
Qoo$V2 = as.integer(as.character(Qoo$V2))
library(dplyr)
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
str(Qoo)
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
str(Qoo)
Qoo$V3 = as.float(as.character(Qoo$V3))
Qoo$V3 = as.num(as.character(Qoo$V3))
Qoo$V3 = as.Number(as.character(Qoo$V3))
as.integer
?as.Number
?number
??number
?as
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
str(Qoo)
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(WeightMean = mean(V3,na.rm = T),KalMean = mean(V4, na.rm = T),PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_dups1.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V5 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(WeightMean = mean(V3,na.rm = T),KalMean = mean(V4, na.rm = T),PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_dups1.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V5 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V6 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_dups1.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V6 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_dups1.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V6 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
str(Qaa)
Qaa = read.table("ingre_dups1.txt",sep=",")
Qbb = read.table("ingre_no_dups",sep=",")
setwd("~/GitHub/marketingtaiwan/熱量食材check")
Qaa = read.table("ingre_dups1.txt",sep=",")
Qbb = read.table("ingre_no_dups",sep=",")
Qbb = read.table("ingre_no_dups.txt",sep=",")
str(Qaa)
str(Qbb)
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_no_dups2.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V6 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qoo1 = read.csv("ingre_no_dups2.txt",sep="," , header =F)
Qoo2 = read.csv("ingre_no_dups1.txt",sep="," , header =F)
rbind()
?rbind
QQQ = rbind(c(Qoo1, Qoo2))
QQQ
QQQ = cbind(c(Qoo1, Qoo2))
QQQ
m <- cbind(1, 1:7)
m
m <- cbind(m, 8:14)[, c(1, 3, 2)]
m
cbind(0, rbind(1, 1:3))
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0)
Qoo1
Qoo2
QQQ = rbind(Qoo1, Qoo2)
QQQ
write.table(QQQ, "IngreCal.txt",quote = F, ,sep=","  row.names = F)
write.table(QQQ, "IngreCal.txt",quote = F, ,sep=",", row.names = F)
setwd("~/Documents/BigData/R")
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
Qoo
str(Qoo)
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(Qoo[,c(2,1)], "tagsAll.csv",quote = F, row.names = F)
Qoo
Qoo <- unique(Qoo[order(Qoo[,1]),])
write.csv(Qoo[,c(2,3)], "tagsAll-Cat.csv",quote = F, row.names = F)
Qoo <- unique(Qoo[order(Qoo[,1]),])
write.csv(Qoo[,c(2,1)], "tagsAll.csv",quote = F, row.names = F)
Qoo
Qoo[,c(2,1)
]
unique(Qoo[,c(2,1)])
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(unique(Qoo[,c(2,1)]), "tagsAll.csv",quote = F, row.names = F)
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(unique(Qoo[,c(1,2)]), "tagsAll.csv",quote = F, row.names = F)
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(unique(Qoo[,c(2,1)]), "tagsAll.csv",quote = F, row.names = F)
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(Qoo[,c(3,1)], "tagsAll.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,3)], "tagsAll-Cal.csv",quote = F, row.names = F)
setwd("~/GitHub/marketingtaiwan")
setwd("~/GitHub/marketingtaiwan/熱量食材check")
library(dplyr)
Qoo = read.table("ingre_dups.txt",sep=",")
Qoo$V3 = as.integer(as.character(Qoo$V3))
Qoo$V4 = as.integer(as.character(Qoo$V4))
Qxx =
Qoo %>%
group_by(V1) %>%
summarise(PerGramMean = mean(V5, na.rm = T))
write.table(Qxx, "ingre_no_dups2.txt",sep=",",quote = F, row.names = F,col.names = F)
Qyy =
select(Qoo, V1, V6) %>%
filter(V6 != '') %>%
distinct(V1,V6)
write.table(Qyy, "ingre_units.txt",sep=",",quote = F, row.names = F,
col.names = F)
Qoo1 = read.csv("ingre_no_dups2.txt",sep="," , header =F)
Qoo2 = read.csv("ingre_no_dups1.txt",sep="," , header =F)
QQQ = rbind(Qoo1, Qoo2)
write.table(QQQ, "IngreCal.txt",quote = F, ,sep=",", row.names = F)
QQQ
Qoo1 = read.csv("tagsAll-Cal.csv",sep=",", header =F)
Qoo2 = read.csv("IngreCal.txt",sep="," ,header =F)
Qoo1
Qoo2
Qoo = left_join(Qoo1, Qoo2, by = c('V1'='V1'))
Qoo
Qoo1 = read.csv("tagsAll.csv",sep=",", header =F)
Qoo2 = read.csv("IngreCal.txt",sep="," ,header =F)
Qoo = left_join(Qoo1, Qoo2, by = c('V1'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
Qoo
Qoo1
head(Qoo1)
Qoo1 = read.csv("tagsAll-Cal.csv",sep=",", header =F)
Qoo1
Qoo2 = read.csv("IngreCal.txt",sep="," ,header =F)
Qoo2
Qoo1 = read.csv("tagsAll-Cal.csv",sep=",", header =F)
Qoo2 = read.csv("IngreCal.txt",sep="," ,header =F)
head(Qoo1)
Qoo = left_join(Qoo1, Qoo2, by = c('V1'='V1'))
Qoo
head(Qoo)
aa = read.csv("tagsAll-Cal.csv",sep=",", header =F)
bb = read.csv("IngreCal.txt",sep="," ,header =F)
head(aa)
write.csv(Qoo[,c(1,2)], "tagsAll-Name.csv",quote = F, row.names = F)
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(Qoo[,c(3,1)], "tagsAll.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,3)], "tagsAll-Cal.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,2)], "tagsAll-Name.csv",quote = F, row.names = F)
getwd()
setwd("~/Documents/BigData/R")
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(Qoo[,c(3,1)], "tagsAll.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,3)], "tagsAll-Cal.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,2)], "tagsAll-Name.csv",quote = F, row.names = F)
setwd("~/GitHub/marketingtaiwan/熱量食材check")
aa = read.csv("tagsAll-Name.csv",sep=",", header =F)
aa
setwd("~/Documents/BigData/R")
library(dplyr)
Qoo1 = read.csv("ingre.csv",sep=",", header =F)
Qoo2 = read.csv("tags.csv",sep="," ,header =F)
Qoo1=Qoo1[,1:2]
Qoo1[,2] = as.character(Qoo1[,2])
Qoo2[,1] = as.character(Qoo2[,1])
Qoo = right_join(Qoo1, Qoo2, by = c('V2'='V1'))
Qoo <- Qoo[order(Qoo[,1]),]
write.csv(Qoo[,c(3,1)], "tagsAll.csv",quote = F, row.names = F)
write.csv(Qoo[,c(1,3)], "tagsAll-Cal.csv",quote = F, row.names = F)
write.csv(unique(Qoo[,c(1,2)]), "tagsAll-Name.csv",quote = F, row.names = F)
setwd("~/GitHub/marketingtaiwan/熱量食材check")
aa = read.csv("tagsAll-Name.csv",sep=",", header =F)
aa
aa = read.csv("tagsAll-Name.csv",sep=",", header =F)
bb = read.csv("IngreCal.txt",sep="," ,header =F)
bb
head(bb)
cc = left_join(aa, bb)
cc
head(cc)
cc = right_join(aa, bb, by = c('V1'='V1'))
cc
head(cc)
cc = left_join(aa, bb, by = c('V1'='V1'))
head(cc)
write.csv(cc[,c(1,3)], "IngreCalJoin.csv",quote = F, row.names = F)
aa = read.csv("tagsAll-Name.csv",sep=",", header =F)
bb = read.csv("IngreCal.txt",sep="," ,header =F)
head(cc)
cc = left_join(aa, bb, by = c('V1'='V1'))
write.csv(cc[,c(1,3)], "IngreCalJoin.csv",quote = F, row.names = F)
write.csv(cc[,c(1,3)], "IngreCalJoin.csv",quote = F, row.names = F, col.names =F)
write.csv(cc[,c(1,3)], "IngreCalJoin.csv",quote = F, row.names = F)
GETWD()
getwd()
setwd("~/Documents/BigData/R")
setwd("~/GitHub/marketingtaiwan/食材單位轉換")
ingreCounts = read.table("ingre_count.txt", sep = ",")
ingreCounts = read.table("ingre_counts.txt", sep = ",")
IN
ingreCounts
ingreCounts = ingreCounts[,c(1,3)]
ingreCounts
ingreCounts = order[ingreCounts, ingreCounts[,c(1,3)]]
?order
ingreCounts
oingreCounts = sort(ingreCounts)
oingreCounts = order(ingreCounts)
oingreCounts
oingreCounts = ingreCounts[order(ingreCounts)]
str(ingreCounts)
oingreCounts = ingreCounts[order(ingreCounts[1,])]
oingreCounts
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts
ingreCounts = ingreCounts[,c(1,3)]
ingreCounts
oingreCounts = ingreCounts[order(ingreCounts[1,])]
oingreCounts
oingreCounts = order(ingreCounts[1,])
oingreCounts
oingreCounts = ingreCounts[sort(ingreCounts[1,])]
oingreCounts = ingreCounts[order(ingreCounts[,1])]
str(ingreCounts)
oingreCounts = ingreCounts[order(ingreCounts$V1)]
order(ingreCounts$V1)
group(ingreCounts$V1)
?group
library(dplyr)
ingreCounts %>%
group_by(V1)
ingreCounts %>%
group_by(V1) %>%
summarise(PerGramMean = sum(V3, na.rm = T))
AllingreCounts=
ingreCounts %>%
group_by(V1) %>%
summarise(PerGramMean = sum(V3, na.rm = T))
AllingreCounts
plot(AllingreCounts)
frequencyplot(AllingreCounts)
pie(AllingreCounts)
pie(AllingreCounts$V1)
hist(AllingreCounts$V1)
hist(AllingreCounts$V2)
str(ingreCounts)
hist(AllingreCounts$V3)
str(AllingreCounts)
hist(AllingreCounts$PerGramMean)
pie(AllingreCounts$PerGramMean)
?pie
pie(AllingreCounts$PerGramMean)
library(dplyr)
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
str(ingreCounts)
str(AllingreCounts)
AllingreCounts=
ingreCounts %>%
group_by(V1) %>%
summarise(V2 = sum(V3, na.rm = T))
pie(AllingreCounts$V2)
pie(AllingreCounts$V2)
plot(AllingreCounts$V2)
AllingreCounts
plot
?plot
plot(AllingreCounts$V2, xlim = T)
plot(AllingreCounts)
library(dplyr)
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
str(ingreCounts)
str(AllingreCounts)
AllingreCounts=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
pie(AllingreCounts$frequency)
?pie
pie(AllingreCounts$frequency, labels = names(AllingreCounts$category))
TBingreCounts = as.data.framce(AllingreCounts)
TBingreCounts = as.data.frame(AllingreCounts)
TBingreCounts
str(TBingreCounts)
pie(AllingreCounts)
barplot(AllingreCounts)
barplot(AllingreCounts$frequency)
barplot(table(AllingreCounts$frequency)
)
barplot(AllingreCounts$category)
?barplot
?col.names
?names
library(dplyr)
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
str(ingreCounts)
str(AllingreCounts)
tapply(ingreCounts, ingreCounts$V1, sum)
tapply(ingreCounts, V1, sum)
tapply(ingreCounts, ingreCounts[,1], sum)
tapply
tapply(ingreCounts[,2], ingreCounts[,1], sum)
x = tapply(ingreCounts[,2], ingreCounts[,1], sum)
x
str(x)
t(x)
?tapply
x = tapply(ingreCounts[,2], ingreCounts[,1], sum, simplify = F)
x
str(x)
library(plyr)
library(plyr)
ddply(ingreCounts, ingreCounts[,1], function(e)sum(e$V1))
ddply(ingreCounts, c("V1"), function(df)sum(df$V1))
library(plyr)
ddply(ingreCounts, c("V1"), function(df)sum(df$V3))
AllingreCounts=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
rownames(AllingreCounts)= AllingreCounts[,1]
AllingreCounts
names(AllingreCounts)= paste(AllingreCounts[,1])
AllingreCounts
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
names(AllingreCounts)= paste(AllingreCounts[,1])
AllingreCounts
x = tapply(ingreCounts[,2], ingreCounts[,1], sum, simplify = F)
names(x)= paste(x[,1])
str(x)
x
rownames(AllingreCounts)= AllingreCounts[,1]
AllingreCounts
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
AllingreCounts=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
rownames(AllingreCounts)= AllingreCounts[,1]
AllingreCounts
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts = ingreCounts[,c(1,3)]
AllingreCounts=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
AllingreCounts
ingreCounts = read.table("ingre_counts.txt", sep = ",")
ingreCounts
ingreCounts = ingreCounts[,c(1,3)]
ingreCounts
bbb=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
bbb
library(dplyr)
bbb=
ingreCounts %>%
group_by(category=V1) %>%
summarise(frequency = sum(V3, na.rm = T))
bbb
