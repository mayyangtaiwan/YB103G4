library(C50)
data(churn)
str(churnTrain)
churnTrain = churnTrain[,! names(churnTrain) %in% c("state","area_code", "account_length") ]
set.seed(2)
ind = sample(2, nrow(churnTrain), replace = TRUE, prob=c(0.7,0.3))
trainset = churnTrain[ind == 1,]
testset = churnTrain[ind == 2,]
svm.model= train(churn ~ .,data = trainset,method = "svmRadial")
svm.pred = predict(svm.model, testset[,! names(testset) %in% c("churn")])
table(svm.pred, testset[,c("churn")])
confusionMatrix(svm.pred, testset[,c("churn")])
install.packages("ROCR")
library(ROCR)
svmfit=svm(churn~ ., data=trainset, prob=TRUE)
svmfit
pred=predict(svmfit,testset[, !names(testset) %in% c("churn")], probability=TRUE)
pred.prob = attr(pred, "probabilities")
pred.to.roc = pred.prob[, 2]
pred.rocr = prediction(pred.to.roc, testset$churn)
perf.rocr = performance(pred.rocr, measure = "auc", x.measure ="cutoff")
svmfit=svm(churn~ ., data=trainset, prob=TRUE)
pred=predict(svmfit,testset[, !names(testset) %in% c("churn")], probability=TRUE)
pred
pred.prob = attr(pred, "probabilities")
pred.prob
pred.to.roc = pred.prob[, 2]
pred.to.roc
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
library(rpart)
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
perf.tpr.rocr = performance(pred.rocr, "tpr","fpr")
plot(perf.tpr.rocr, colorize=T,main=paste("AUC:",(perf.rocr@y.values)))
a = read.table(text=' a b
1 c
1 d
2 c
2 a
2 b
3 a
', head=T)
b = tapply(a[,2], a[,1], paste)
b
a$tf = sapply(a[,1], function(e){b[e]})
a$tf
library(arules)
data(Groceries)
write(Groceries,"Groceries.txt")
itemFrequencyPlot(Groceries, support = 0.1, cex.names=0.8,topN=5)
rules = apriori(Groceries, parameter = list(supp = 0.01, conf =0.5, target= "rules"))
summary(rules)
inspect(head(rules))
rules=sort(rules, by="confidence", decreasing=TRUE)
write(rules,"Groceries.txt")
head(interestMeasure(rules, c("support", "chiSquare", "confidence","conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),Groceries))
head(interestMeasure(rules, c("support","confidence", "chiSquare", "conviction","cosine", "coverage", "leverage", "lift","oddsRatio"),Groceries))
y <- data.frame(a = 1, b = "a")
dput(y)
dput(y, file = "y.R")
new.y <- dget("y.R")
new.y
x <- "foo"
y <- data.frame(a = 1, b = "a")
y
x
dump(c("x", "y"), file = "data.R")
rm(x, y)
source("data.R")
y
x
setwd("~/GitHub/YB103G4/3D")
library(dplyr)
library(dplyr)
library(ggplot2)
library(plot3D)
library(RColorBrewer)
library(rgl)
Qoo = read.csv("forplot.csv", sep = ",")
SeaFood= Qoo %>% filter(IngreSubCatNo == 'F')
par(family='Hannotate TC')
plot3d(x =SeaFood$V2 , y = SeaFood$IngreCal, z =SeaFood$IngreSeason,
type = "s", radius=1.025,
xlab = "Frequency", ylab = "Calories",zlab ="Seasons",
box = FALSE)
text3d(x =SeaFood$V2 , y = SeaFood$IngreCal, z =SeaFood$IngreSeason,
col = as.factor(SeaFood$IngreSeason),
text=SeaFood$V1)
par(family='Hannotate TC')
par(mar=c(0.5,0,0,0))
text3D(x =SeaFood$V2 , y = SeaFood$IngreCal, z =SeaFood$IngreSeason,
phi = 20, ticktype = "detailed",
colvar = SeaFood$IngreSeason,col=brewer.pal(6,"Dark2"),theta = 30, d = 6,
labels= SeaFood$V1, pch = 2, cex = 1,
xlab = "Frequency", ylab = "Calories",zlab = "Seasons",colkey = FALSE)
Veg= Qoo %>% filter(IngreSubCatNo == 'G')
par(family='Hannotate TC')
plot3d(x =Veg$V2 , y = Veg$IngreCal, z =Veg$IngreSeason,
type = "s", radius=1.025,
xlab = "Frequency", ylab = "Calories",zlab ="Seasons",
box = FALSE)
text3d(x =Veg$V2 , y = Veg$IngreCal, z =Veg$IngreSeason,
col = as.factor(Veg$IngreSeason),
text=Veg$V1)
par(family='Hannotate TC')
par(mar=c(0.5,0,0,0))
text3D(x =Veg$V2 , y = Veg$IngreCal, z =Veg$IngreSeason,
phi = 20, ticktype = "detailed",
colvar = Veg$IngreSeason,col=brewer.pal(6,"Dark2"),theta = 30, d = 6,
labels= Veg$V1, pch = 2, cex = 1,
xlab = "Frequency", ylab = "Calories",zlab = "Seasons",colkey = FALSE)
